'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = require('react');
var React__default = _interopDefault(React);
var ReactDOM = _interopDefault(require('react-dom'));

var EventManager = /** @class */ (function () {
    function EventManager() {
        this.events = {};
    }
    EventManager.prototype.subscribe = function (name, callback) {
        if (!this.events[name]) {
            this.events[name] = [];
        }
        var event = { key: Date.now(), callback: callback };
        this.events[name].push(event);
        return event.key;
    };
    EventManager.prototype.publish = function (name, data) {
        if (this.events[name]) {
            this.events[name].forEach(function (_a) {
                var callback = _a.callback;
                callback(data);
            });
        }
    };
    EventManager.prototype.unSubscribe = function (name, key) {
        if (this.events[name]) {
            for (var i = 0; i < this.events[name].length; i++) {
                if (key === this.events[name][i].key) {
                    this.events[name].splice(i, 1);
                    break;
                }
            }
        }
    };
    return EventManager;
}());
var eventManager = new EventManager();

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var _ref =
/*#__PURE__*/
React__default.createElement("path", {
  d: "M512 896c-212.064 0-384-171.936-384-384s171.936-384 384-384 384 171.936 384 384-171.936 384-384 384m0-832C264.96 64 64 264.96 64 512s200.96 448 448 448 448-200.96 448-448S759.04 64 512 64"
});

var _ref2 =
/*#__PURE__*/
React__default.createElement("path", {
  d: "M432 618.752L310.624 497.376l-45.248 45.248L432 709.248l326.624-326.624-45.248-45.248z"
});

var SvgCheck = function SvgCheck(props) {
  return React__default.createElement("svg", _extends({
    viewBox: "0 0 1024 1024"
  }, props), _ref, _ref2);
};

function _extends$1() { _extends$1 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1.apply(this, arguments); }

var _ref$1 =
/*#__PURE__*/
React__default.createElement("path", {
  d: "M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 00-94.3-139.9 437.71 437.71 0 00-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z"
});

var SvgLoading = function SvgLoading(props) {
  return React__default.createElement("svg", _extends$1({
    viewBox: "0 0 1024 1024"
  }, props), _ref$1);
};

function _extends$2() { _extends$2 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2.apply(this, arguments); }

var _ref$2 =
/*#__PURE__*/
React__default.createElement("path", {
  d: "M512 896c-212.064 0-384-171.936-384-384s171.936-384 384-384 384 171.936 384 384-171.936 384-384 384m0-832C264.96 64 64 264.96 64 512s200.96 448 448 448 448-200.96 448-448S759.04 64 512 64"
});

var _ref2$1 =
/*#__PURE__*/
React__default.createElement("path", {
  d: "M665.376 313.376L512 466.752 358.624 313.376l-45.248 45.248L466.752 512 313.376 665.376l45.248 45.248L512 557.248l153.376 153.376 45.248-45.248L557.248 512l153.376-153.376z"
});

var SvgClose = function SvgClose(props) {
  return React__default.createElement("svg", _extends$2({
    viewBox: "0 0 1024 1024"
  }, props), _ref$2, _ref2$1);
};

function styleInject(css, ref) {
  if ( ref === void 0 ) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') { return; }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css = ".style_mask__9zmSN{position:fixed;top:0;right:0;bottom:0;left:0;display:flex;align-items:center;justify-content:center;background:transparent;z-index:1999}.style_box__2iia4{display:inline-block;max-width:85%;min-width:95px;padding:9px 15px;box-sizing:border-box;text-align:center;word-break:break-all;white-space:pre-wrap;font-size:0;color:#fff;background-color:rgba(58,58,58,.9);border-radius:3px;opacity:0;-webkit-transform:scale(.9);transform:scale(.9);-webkit-backface-visibility:hidden;backface-visibility:hidden;-webkit-transition:opacity .3s,-webkit-transform .3s;transition:opacity .3s,-webkit-transform .3s;transition:opacity .3s,transform .3s;transition:opacity .3s,transform .3s,-webkit-transform .3s}.style_enter__29LyQ{opacity:1;-webkit-transform:scale(1);transform:scale(1)}.style_exit__3WYmp{opacity:0;-webkit-transform:scale(.9);transform:scale(.9)}.style_message__1DUXc{line-height:1.5;font-size:14px}.style_wrapper__cQFyX{margin:0 auto 7px;width:36px;height:36px}.style_loading__2pb7J{-webkit-animation:style_loading__2pb7J 1s linear infinite;animation:style_loading__2pb7J 1s linear infinite}@-webkit-keyframes style_loading__2pb7J{to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@keyframes style_loading__2pb7J{to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}";
var styles = {"-webkit-mask":"style_mask__9zmSN","mask":"style_mask__9zmSN","box":"style_box__2iia4","enter":"style_enter__29LyQ","exit":"style_exit__3WYmp","message":"style_message__1DUXc","wrapper":"style_wrapper__cQFyX","loading":"style_loading__2pb7J"};
styleInject(css);

var icons = {
    fail: React__default.createElement(SvgClose, { fill: "#fff" }),
    loading: React__default.createElement(SvgLoading, { fill: "#fff", className: styles.loading }),
    success: React__default.createElement(SvgCheck, { fill: "#fff" }),
};
function Icon(_a) {
    var type = _a.type;
    return icons[type];
}

var timerId = -1;
function debounce(callback) {
    var count = 0;
    return function () {
        if (count === 0) {
            callback();
            count++;
        }
    };
}
var Toast = function (_a) {
    var type = _a.type, content = _a.content, _b = _a.duration, duration = _b === void 0 ? 3000 : _b, onClose = _a.onClose;
    var _c = React.useState(styles.box), classes = _c[0], setClasses = _c[1];
    var ref = React.useRef(null);
    function exit() {
        setClasses(function () { return styles.box + " " + styles.exit; });
    }
    React.useEffect(function () {
        // force a repaint
        /* eslint-disable no-unused-expressions */
        ref.current && ref.current.scrollTop;
        /* eslint-disable no-unused-expressions */
        setClasses(function (prev) { return prev + " " + styles.enter; });
        var key = eventManager.subscribe('exit', exit);
        return function () {
            eventManager.unSubscribe('exit', key);
            window.clearTimeout(timerId); // in case toast unmount before reaching the timeout
        };
    }, []);
    var scheduleExit = debounce(function () {
        timerId = window.setTimeout(exit, duration);
    });
    return (React__default.createElement("div", { className: styles.mask },
        React__default.createElement("div", { className: classes, style: type === 'info' ? undefined : { padding: 15, borderRadius: 5 }, onTransitionEnd: function () {
                // enter phase
                if (~classes.indexOf(styles.enter) && duration !== 0) {
                    scheduleExit();
                }
                // exit phase
                if (~classes.indexOf(styles.exit)) {
                    onClose();
                }
            }, ref: ref },
            type !== 'info' && (React__default.createElement("div", { className: styles.wrapper, style: type === 'loading' ? { marginBottom: 10 } : undefined },
                React__default.createElement(Icon, { type: type }))),
            React__default.createElement("span", { className: styles.message }, content))));
};

// save messages in a queue, only remove it when component lifecycle ends
var messages = [];
eventManager.subscribe('popmessage', function () {
    var _a = messages[0], type = _a.type, content = _a.content, duration = _a.duration, onClose = _a.onClose;
    var container = document.createElement('div');
    document.body.appendChild(container);
    ReactDOM.render(React__default.createElement(Toast, { type: type, content: content, duration: duration, onClose: function () {
            ReactDOM.unmountComponentAtNode(container);
            document.body.removeChild(container);
            onClose && onClose();
            messages.shift();
            if (messages.length > 0) {
                eventManager.publish('popmessage');
            }
        } }), container);
});
function notice(type, content, duration, onClose) {
    messages.push({ type: type, content: content, duration: duration, onClose: onClose });
    if (messages.length === 1) {
        eventManager.publish('popmessage');
    }
    // if current message is loading, then we should unmount it to proceed
    if (messages.length > 1 && messages[0].type === 'loading') {
        eventManager.publish('exit');
    }
}
var index = {
    info: function (content, duration, onClose) {
        notice('info', content, duration, onClose);
    },
    success: function (content, duration, onClose) {
        notice('success', content, duration, onClose);
    },
    fail: function (content, duration, onClose) {
        notice('fail', content, duration, onClose);
    },
    loading: function (content, onClose) {
        notice('loading', content, 0, onClose);
    },
    hide: function () {
        if (messages.length > 0) {
            eventManager.publish('exit');
        }
    },
};

exports.default = index;
//# sourceMappingURL=index.js.map
